/**
 * –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ñ–æ—Ä–º —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ Telegram
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const config = {
    telegram: {
        botToken: '7564908163:AAGODR5Z6V586b81B5ghU0D1aGGx2CzIjyk',
        chatId: '-4698373221',
        apiUrl: 'https://api.telegram.org/bot'
    },
    messages: {
        success: '‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.',
        error: '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é.',
        validation: '‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è',
        loading: '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–∫–∞...'
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Ñ–æ—Ä–º
function initForms() {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Ñ–æ—Ä–º
    document.querySelectorAll('.enrollment-form__content:not(.enrollment-modal__form)').forEach(form => {
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            await handleFormSubmit(this);
        });
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    initModal();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã
async function handleFormSubmit(form) {
    const formData = {
        name: form.querySelector('.enrollment-form__input[placeholder="–í–∞—à–µ –∏–º—è"]').value,
        phone: form.querySelector('.enrollment-form__input[placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"]').value,
        course: form.querySelector('.enrollment-form__select')?.value || '–Ω–µ —É–∫–∞–∑–∞–Ω',
        location: form.closest('.enrollment-form').dataset.location || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'
    };

    if (!validateForm(formData)) return;

    const submitBtn = form.querySelector('.enrollment-form__submit');
    const originalContent = submitBtn.innerHTML;
    submitBtn.disabled = true;
    submitBtn.innerHTML = config.messages.loading;

    const message = generateStandardMessage(formData);
    await sendToTelegram(message, form, submitBtn, originalContent);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã
async function handleModalFormSubmit() {
    const form = document.querySelector('.enrollment-modal__form');
    const formData = {
        name: form.querySelector('.enrollment-form__input[placeholder="–í–∞—à–µ –∏–º—è"]').value,
        phone: form.querySelector('.enrollment-form__input[placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"]').value,
        comment: form.querySelector('.enrollment-form__textarea').value,
        callback: form.querySelector('.enrollment-form__checkbox input').checked,
        teacher: document.querySelector('.enrollment-form__teacher-item--selected')?.textContent || '–Ω–µ —É–∫–∞–∑–∞–Ω',
        time: document.querySelector('.enrollment-form__time-slot--selected')?.textContent || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'
    };

    if (!validateForm(formData)) return;

    const submitBtn = document.querySelector('.enrollment-form__nav-btn--next');
    const originalContent = submitBtn.innerHTML;
    submitBtn.disabled = true;
    submitBtn.innerHTML = config.messages.loading;

    const message = generateModalMessage(formData);
    await sendToTelegram(message, form, submitBtn, originalContent);

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    bootstrap.Modal.getInstance(document.getElementById('enrollmentModal')).hide();
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
function validateForm(formData) {
    if (!formData.name || !formData.phone) {
        alert(config.messages.validation);
        return false;
    }
    return true;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã
function generateStandardMessage(data) {
    return `üìå *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞* (${data.location}):\n\n` +
        `üë§ *–ò–º—è*: ${data.name}\n` +
        `üìû *–¢–µ–ª–µ—Ñ–æ–Ω*: ${data.phone}\n` +
        `üìö *–ö—É—Ä—Å*: ${data.course}`;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã
function generateModalMessage(data) {
    return `üìå *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞* (–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ):\n\n` +
        `üë§ *–ò–º—è*: ${data.name}\n` +
        `üìû *–¢–µ–ª–µ—Ñ–æ–Ω*: ${data.phone}\n` +
        `üë®‚Äçüè´ *–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å*: ${data.teacher}\n` +
        `‚è∞ *–í—Ä–µ–º—è*: ${data.time}\n` +
        `üìù *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π*: ${data.comment || '‚Äî'}\n` +
        `üìû *–û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫*: ${data.callback ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
async function sendToTelegram(message, form, submitBtn, originalContent) {
    try {
        const response = await fetch(`${config.telegram.apiUrl}${config.telegram.botToken}/sendMessage`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: config.telegram.chatId,
                text: message,
                parse_mode: 'Markdown'
            })
        });

        const result = await response.json();
        if (result.ok) {
            alert(config.messages.success);
            if (form) form.reset();
        } else {
            throw new Error('Telegram API error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert(config.messages.error);
    } finally {
        if (submitBtn) {
            submitBtn.disabled = false;
            submitBtn.innerHTML = originalContent;
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function initModal() {
    const modal = new bootstrap.Modal(document.getElementById('enrollmentModal'));

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–∞–º —Å –∞—Ç—Ä–∏–±—É—Ç–æ–º [data-enrollment-modal]
    document.querySelectorAll('[data-enrollment-modal]').forEach(btn => {
        btn.addEventListener('click', () => {
            renderTeachers();
            modal.show();
        });
    });

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —à–∞–≥–∞–º
    document.querySelector('.enrollment-form__nav-btn--next').addEventListener('click', function() {
        const currentStep = document.querySelector('.enrollment-form__step--active');
        const currentStepIndex = Array.from(document.querySelectorAll('.enrollment-form__step')).indexOf(currentStep);

        // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
        if (currentStepIndex === 1) {
            handleModalFormSubmit();
            return;
        }

        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —à–∞–≥–æ–≤
        currentStep.classList.remove('enrollment-form__step--active');
        document.querySelectorAll('.enrollment-form__step')[currentStepIndex + 1].classList.add('enrollment-form__step--active');
        document.querySelectorAll('.enrollment-form__step-dot')[currentStepIndex].classList.remove('enrollment-form__step-dot--active');
        document.querySelectorAll('.enrollment-form__step-dot')[currentStepIndex + 1].classList.add('enrollment-form__step-dot--active');
        document.querySelector('.enrollment-form__nav-btn--prev').disabled = false;

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º —à–∞–≥–µ
        if (currentStepIndex + 1 === 1) {
            this.innerHTML = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å <i class="fas fa-paper-plane"></i>';
        }
    });

    document.querySelector('.enrollment-form__nav-btn--prev').addEventListener('click', function() {
        const currentStep = document.querySelector('.enrollment-form__step--active');
        const currentStepIndex = Array.from(document.querySelectorAll('.enrollment-form__step')).indexOf(currentStep);

        currentStep.classList.remove('enrollment-form__step--active');
        document.querySelectorAll('.enrollment-form__step')[currentStepIndex - 1].classList.add('enrollment-form__step--active');
        document.querySelectorAll('.enrollment-form__step-dot')[currentStepIndex].classList.remove('enrollment-form__step-dot--active');
        document.querySelectorAll('.enrollment-form__step-dot')[currentStepIndex - 1].classList.add('enrollment-form__step-dot--active');
        document.querySelector('.enrollment-form__nav-btn--next').innerHTML = '–î–∞–ª–µ–µ <i class="fas fa-arrow-right"></i>';

        if (currentStepIndex - 1 === 0) {
            this.disabled = true;
        }
    });
}

// –†–µ–Ω–¥–µ—Ä —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
function renderTeachers() {
    const teachersList = document.querySelector('.enrollment-form__teachers-list');
    teachersList.innerHTML = '';

    const teachers = [
        { id: 1, name: '–ê–Ω–Ω–∞ –ò.', subject: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π', photo: 'img/teacher1.jpg' },
        { id: 2, name: '–ü–µ—Ç—Ä –°.', subject: '–ù–µ–º–µ—Ü–∫–∏–π', photo: 'img/teacher2.jpg' },
        { id: 3, name: '–ú–∞—Ä–∏—è –ü.', subject: '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π', photo: 'img/teacher3.jpg' },
        { id: 4, name: '–ò–≤–∞–Ω –ö.', subject: '–ò—Å–ø–∞–Ω—Å–∫–∏–π', photo: 'img/teacher4.jpg' }
    ];

    teachers.forEach(teacher => {
        const teacherItem = document.createElement('div');
        teacherItem.className = 'enrollment-form__teacher-item';
        teacherItem.dataset.teacherId = teacher.id;
        teacherItem.innerHTML = `
      <img src="${teacher.photo}" alt="${teacher.name}" class="enrollment-form__teacher-photo">
      <span class="enrollment-form__teacher-name">${teacher.name}</span>
      <small>${teacher.subject}</small>
    `;
        teacherItem.addEventListener('click', () => {
            document.querySelectorAll('.enrollment-form__teacher-item').forEach(item => {
                item.classList.remove('enrollment-form__teacher-item--selected');
            });
            teacherItem.classList.add('enrollment-form__teacher-item--selected');
            renderSchedule(teacher.id);
        });
        teachersList.appendChild(teacherItem);
    });
}

// –†–µ–Ω–¥–µ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
function renderSchedule(teacherId) {
    const scheduleDays = document.querySelector('.enrollment-form__schedule-days');
    scheduleDays.innerHTML = '';

    const schedule = {
        1: [
            { day: '–ü–Ω', slots: ['10:00', '14:00'] },
            { day: '–°—Ä', slots: ['11:00', '15:00'] }
        ],
        2: [
            { day: '–í—Ç', slots: ['09:00', '13:00'] }
        ]
    };

    if (schedule[teacherId]) {
        schedule[teacherId].forEach(day => {
            const dayElement = document.createElement('div');
            dayElement.className = 'enrollment-form__day';
            dayElement.innerHTML = `
        <div class="enrollment-form__day-name">${day.day}</div>
        <div class="enrollment-form__time-slots"></div>
      `;

            const timeSlots = dayElement.querySelector('.enrollment-form__time-slots');
            day.slots.forEach(slot => {
                const slotElement = document.createElement('div');
                slotElement.className = 'enrollment-form__time-slot';
                slotElement.textContent = slot;
                slotElement.addEventListener('click', () => {
                    document.querySelectorAll('.enrollment-form__time-slot').forEach(s => {
                        s.classList.remove('enrollment-form__time-slot--selected');
                    });
                    slotElement.classList.add('enrollment-form__time-slot--selected');
                });
                timeSlots.appendChild(slotElement);
            });

            scheduleDays.appendChild(dayElement);
        });
    } else {
        scheduleDays.innerHTML = '<div class="text-muted">–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ</div>';
    }
}
// 1. –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤
const features = [
    "–û–ø—ã—Ç–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏",
    "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥", 
    "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
  ];
  
  // 2. –í—ã–≤–æ–¥–∏–º –≤ –±–ª–æ–∫ features
  const featuresContainer = document.querySelector('.features__grid');
  
  features.forEach((feature, index) => {
    featuresContainer.innerHTML += `
      <div class="feature">
        <h3>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ ${index + 1}</h3>
        <p>${feature}</p>
      </div>
    `;
  });
  // –ö–Ω–æ–ø–∫–∞ —Å–∫—Ä–æ–ª–ª–∞
const scrollBtn = document.getElementById('scrollTopBtn');

window.addEventListener('scroll', () => {
  scrollBtn.style.display = (window.pageYOffset > 300) ? 'block' : 'none';
});

scrollBtn.addEventListener('click', () => {
  window.scrollTo({
    top: 0,
    behavior: 'smooth'
  });
});
// 1. –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏
const featuresData = {
    feature1: {
      icon: 'fas fa-chalkboard-teacher',
      title: '–û–ø—ã—Ç–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏',
      description: '–í—Å–µ –Ω–∞—à–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã'
    },
    feature2: {
      icon: 'fas fa-user-graduate',
      title: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥',
      description: '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–¥–±–∏—Ä–∞–µ—Ç—Å—è –ø–æ–¥ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å'
    }
  };
  
  // 2. –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –≤—ë—Ä—Å—Ç–∫—É 
  const featuresContainer = document.querySelector('.features__grid');
  featuresContainer.innerHTML = `
    <div class="feature">
      <i class="${featuresData.feature1.icon}"></i>
      <h3>${featuresData.feature1.title}</h3>
      <p>${featuresData.feature1.description}</p>
    </div>
  `;

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON
async function loadData() {
    try {
      const response = await fetch('data.json');
      if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏');
      const data = await response.json();
      renderFeatures(data.features);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
    }
  }
  
  function renderFeatures(features) {
    const container = document.querySelector('.features__grid');
    container.innerHTML = features.map(feature => `
      <div class="feature">
        <i class="${feature.icon}"></i>
        <h3>${feature.title}</h3>
        <p>${feature.text}</p>
      </div>
    `).join('');
  }
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
  loadData();


