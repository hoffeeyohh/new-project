/**
 * –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ñ–æ—Ä–º —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ Telegram
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const config = {
    telegram: {
        botToken: '7564908163:AAGODR5Z6V586b81B5ghU0D1aGGx2CzIjyk',
        chatId: '-4698373221',
        apiUrl: 'https://api.telegram.org/bot'
    },
    messages: {
        success: '‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.',
        error: '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é.',
        validation: '‚ö†Ô∏è –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è',
        loading: '<i class="fas fa-spinner fa-spin"></i> –û—Ç–ø—Ä–∞–≤–∫–∞...'
    }
};

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
document.addEventListener('DOMContentLoaded', function() {
    initForms();
    initScrollButton();
    loadData();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Ñ–æ—Ä–º
function initForms() {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Ñ–æ—Ä–º
    document.querySelectorAll('.enrollment-form__content:not(.enrollment-modal__form)').forEach(form => {
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            await handleFormSubmit(this);
        });
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    initModal();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã
async function handleFormSubmit(form) {
    const formData = {
        name: form.querySelector('.enrollment-form__input[placeholder="–í–∞—à–µ –∏–º—è"]').value,
        phone: form.querySelector('.enrollment-form__input[placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"]').value,
        course: form.querySelector('.enrollment-form__select')?.value || '–Ω–µ —É–∫–∞–∑–∞–Ω',
        location: form.closest('.enrollment-form').dataset.location || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'
    };

    if (!validateForm(formData)) return;

    const submitBtn = form.querySelector('.enrollment-form__submit');
    const originalContent = submitBtn.innerHTML;
    submitBtn.disabled = true;
    submitBtn.innerHTML = config.messages.loading;

    const message = generateStandardMessage(formData);
    await sendToTelegram(message, form, submitBtn, originalContent);
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
function validateForm(formData) {
    if (!formData.name || !formData.phone) {
        alert(config.messages.validation);
        return false;
    }
    return true;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π —Ñ–æ—Ä–º—ã
function generateStandardMessage(data) {
    return `üìå *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞* (${data.location}):\n\n` +
        `üë§ *–ò–º—è*: ${data.name}\n` +
        `üìû *–¢–µ–ª–µ—Ñ–æ–Ω*: ${data.phone}\n` +
        `üìö *–ö—É—Ä—Å*: ${data.course}`;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
async function sendToTelegram(message, form, submitBtn, originalContent) {
    try {
        const response = await fetch(`${config.telegram.apiUrl}${config.telegram.botToken}/sendMessage`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: config.telegram.chatId,
                text: message,
                parse_mode: 'Markdown'
            })
        });

        const result = await response.json();
        if (result.ok) {
            alert(config.messages.success);
            if (form) form.reset();
        } else {
            throw new Error('Telegram API error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert(config.messages.error);
    } finally {
        if (submitBtn) {
            submitBtn.disabled = false;
            submitBtn.innerHTML = originalContent;
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function initModal() {
    const modal = new bootstrap.Modal(document.getElementById('enrollmentModal'));

    document.querySelectorAll('[data-bs-toggle="modal"]').forEach(btn => {
        btn.addEventListener('click', () => {
            modal.show();
        });
    });
}

// –ö–Ω–æ–ø–∫–∞ —Å–∫—Ä–æ–ª–ª–∞
function initScrollButton() {
    const scrollBtn = document.getElementById('scrollTopBtn');

    window.addEventListener('scroll', () => {
        scrollBtn.style.display = (window.pageYOffset > 300) ? 'block' : 'none';
    });

    scrollBtn.addEventListener('click', () => {
        window.scrollTo({
            top: 0,
            behavior: 'smooth'
        });
    });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
async function loadData() {
    try {
        // –ú–æ–∫ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –Ω–µ—Ç data.json
        const mockData = {
            features: [
                {
                    icon: 'fas fa-chalkboard-teacher',
                    title: '–û–ø—ã—Ç–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏',
                    text: '–í—Å–µ –Ω–∞—à–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∏ –º–∏–Ω–∏–º—É–º 5 –ª–µ—Ç –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã.'
                },
                {
                    icon: 'fas fa-user-graduate',
                    title: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥',
                    text: '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—É—á–µ–Ω–∏—è –ø–æ–¥–±–∏—Ä–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –ø–æ–¥ –≤–∞—à–∏ —Ü–µ–ª–∏ –∏ —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏.'
                },
                {
                    icon: 'fas fa-certificate',
                    title: '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã',
                    text: '–ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –∫—É—Ä—Å–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–≥–æ –æ–±—Ä–∞–∑—Ü–∞.'
                }
            ],
            teachers: [
                {
                    id: 1,
                    photo: 'img/teacher_anna.png',
                    name: '–ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞',
                    subject: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫'
                },
                {
                    id: 2,
                    photo: 'img/teacher_zinaida.png',
                    name: '–ó–∏–Ω–∞–∏–¥–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞',
                    subject: '–ù–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫'
                },
                {
                    id: 3,
                    photo: 'img/teacher_maria.png',
                    name: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞',
                    subject: '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π —è–∑—ã–∫'
                },
                {
                    id: 4,
                    photo: 'img/teacher_ivan.png',
                    name: '–ò–≤–∞–Ω –ö—É–∑–Ω–µ—Ü–æ–≤',
                    subject: '–ò—Å–ø–∞–Ω—Å–∫–∏–π —è–∑—ã–∫'
                }
            ]
        };

        renderFeatures(mockData.features);
        renderTeachers(mockData.teachers);
        initSwiper();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    }
}

// –†–µ–Ω–¥–µ—Ä –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤
function renderFeatures(features) {
    const container = document.querySelector('.features__grid');
    if (container) {
        container.innerHTML = features.map(feature => `
            <div class="feature">
                <div class="feature__icon">
                    <i class="${feature.icon}"></i>
                </div>
                <h3 class="feature__title">${feature.title}</h3>
                <p class="feature__text">${feature.text}</p>
            </div>
        `).join('');
    }
}

// –†–µ–Ω–¥–µ—Ä –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
function renderTeachers(teachers) {
    const container = document.querySelector('.teacherSwiper .swiper-wrapper');
    if (container) {
        container.innerHTML = teachers.map(teacher => `
            <div class="swiper-slide">
                <div class="teacher">
                    <img src="${teacher.photo}" alt="${teacher.name}" class="teacher__photo">
                    <h3 class="teacher__name">${teacher.name}</h3>
                    <p class="teacher__subject">${teacher.subject}</p>
                    <button class="button button--primary button--sm" data-bs-toggle="modal" data-bs-target="#enrollmentModal">–ó–∞–ø–∏—Å–∞—Ç—å—Å—è</button>
                </div>
            </div>
        `).join('');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Swiper
function initSwiper() {
    if (document.querySelector('.teacherSwiper')) {
        const teacherSwiper = new Swiper('.teacherSwiper', {
            slidesPerView: 1, // –í—Å–µ–≥–¥–∞ 1 —Å–ª–∞–π–¥
            spaceBetween: 20, // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Å–ª–∞–π–¥–∞–º–∏ (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            loop: true, // –¥–ª—è –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            pagination: {
                el: '.swiper-pagination',
                clickable: true,
            },
            // –±—Ä–µ–π–∫–∏ –ø–æ–¥ —Ä–∞–∑–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
            /*
            breakpoints: {
                768: {
                    slidesPerView: 2,
                },
                992: {
                    slidesPerView: 3,
                },
                1200: {
                    slidesPerView: 4,
                }
            }
            */
        });
    }
}